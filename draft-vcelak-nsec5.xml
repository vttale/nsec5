<?xml version="1.0" encoding="us-ascii"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.0.40 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC1034 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1034.xml">
<!ENTITY RFC1035 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2136 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2136.xml">
<!ENTITY RFC2181 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2181.xml">
<!ENTITY RFC2308 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2308.xml">
<!ENTITY RFC4033 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4033.xml">
<!ENTITY RFC4034 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4034.xml">
<!ENTITY RFC4035 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4035.xml">
<!ENTITY RFC4648 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4648.xml">
<!ENTITY RFC5114 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5114.xml">
<!ENTITY RFC5155 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5155.xml">
<!ENTITY RFC6234 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6234.xml">
<!ENTITY RFC6605 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6605.xml">
<!ENTITY RFC7748 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7748.xml">
<!ENTITY RFC8080 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8080.xml">
<!ENTITY RFC6781 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6781.xml">
<!ENTITY RFC7129 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7129.xml">
<!ENTITY RFC7719 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7719.xml">
<!ENTITY I-D.gieben-nsec4 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.gieben-nsec4.xml">
]>

<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc compact="yes"?>
<?rfc rfcedstyle="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>

<rfc ipr="trust200902" docName="draft-vcelak-nsec5-04" category="std">

  <front>
    <title abbrev="NSEC5">NSEC5, DNSSEC Authenticated Denial of Existence</title>

    <author initials="J." surname="Vcelak" fullname="Jan Vcelak">
      <organization>CZ.NIC</organization>
      <address>
        <postal>
          <street>Milesovska 1136/5</street>
          <city>Praha</city>
          <code>130 00</code>
          <country>CZ</country>
        </postal>
        <email>jan.vcelak@nic.cz</email>
      </address>
    </author>
    <author initials="S." surname="Goldberg" fullname="Sharon Goldberg">
      <organization>Boston University</organization>
      <address>
        <postal>
          <street>111 Cummington St, MCS135</street>
          <city>Boston</city>
          <region>MA</region>
          <code>02215</code>
          <country>USA</country>
        </postal>
        <email>goldbe@cs.bu.edu</email>
      </address>
    </author>
    <author initials="D." surname="Papadopoulos" fullname="Dimitrios Papadopoulos">
      <organization>University of Maryland</organization>
      <address>
        <postal>
          <street>8223 Paint Branch Dr</street>
          <city>College Park</city>
          <region>MD</region>
          <code>20740</code>
          <country>USA</country>
        </postal>
        <email>dipapado@umd.edu</email>
      </address>
    </author>
    <author initials="S." surname="Huque" fullname="Shumon Huque">
      <organization>Salesforce</organization>
      <address>
        <postal>
          <street>2550 Wasser Terr</street>
          <city>Herndon</city>
          <region>VA</region>
          <code>20171</code>
          <country>USA</country>
        </postal>
        <email>shuque@gmail.com</email>
      </address>
    </author>
    <author initials="D.C." surname="Lawrence" fullname="David C Lawrence">
      <organization>Akamai Technologies</organization>
      <address>
        <postal>
          <street>150 Broadway</street>
          <city>Boston</city>
          <region>MA</region>
          <code>02142-1054</code>
          <country>USA</country>
        </postal>
        <email>tale@akamai.com</email>
      </address>
    </author>

    <date year="2017"/>

    <area>Internet</area>
    <workgroup>Network Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>The Domain Name System Security Extensions (DNSSEC) introduced the
NSEC resource record (RR) for authenticated denial of existence and
the NSEC3 RR for hashed authenticated denial of existence.  This
document introduces NSEC5 as an alternative mechanism for DNSSEC
authenticated denial of existence.  NSEC5 uses verifiable random
functions (VRFs) to prevent offline enumeration of zone
contents. NSEC5 also protects the integrity of the zone contents even
if an adversary compromises one of the authoritative servers for the
zone.  Integrity is preserved because NSEC5 does not require private
zone-signing keys to be present on all authoritative servers for the
zone, in contrast to DNSSEC online signing schemes like NSEC3 White
Lies.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<section anchor="rationale" title="Rationale">

<t>NSEC5 provides an alternative mechanism for authenticated denial of
existence for the DNS Security Extensions (DNSSEC). NSEC5 has two key
security properties.  First, NSEC5 protects the integrity of the zone
contents even if an adversary compromises one of the authoritative
servers for the zone.  Second, NSEC5 prevents offline zone
enumeration, where an adversary makes a small number of online DNS
queries and then processes them offline in order to learn all of the
names in a zone. Zone enumeration can be used to identify routers,
servers or other "things" that could then be targeted in more complex
attacks. An enumerated zone can also be a source of probable email
addresses for spam, or as a "key for multiple WHOIS queries to reveal
registrant data that many registries may have legal obligations to
protect" <xref target="RFC5155"/>.</t>

<t>All other DNSSEC mechanisms for authenticated denial of existence
either fail to preserve integrity against a compromised server, or
fail to prevent offline zone enumeration.</t>

<t>When offline signing with NSEC is used <xref target="RFC4034"/>, an NSEC chain of
all existing domain names in the zone is constructed and signed
offline. The chain is made of resource records (RRs), where each RR
represents two consecutive domain names in canonical order present in
the zone.  The authoritative server proves the non-existence of a name
by presenting a signed NSEC RR which covers the name.  Because the
authoritative server does not need not to know the private
zone-signing key, the integrity of the zone is protected even if the
server is compromised.  However, the NSEC chain allows for easy zone
enumeration: N queries to the server suffice to learn all N names in
the zone (see e.g., <xref target="nmap-nsec-enum"/>, <xref target="nsec3map"/>, and
<xref target="ldns-walk"/>).</t>

<t>When offline signing with NSEC3 is used <xref target="RFC5155"/>, the original
names in the NSEC chain are replaced by their cryptographic
hashes. Offline signing ensures that NSEC3 preserves integrity even if
an authoritative server is compromised. However, offline zone
enumeration is still possible with NSEC3 (see e.g., <xref target="nsec3walker"/>,
<xref target="nsec3gpu"/>), and is part of standard network reconnaissance tools
(e.g., <xref target="nmap-nsec3-enum"/>, <xref target="nsec3map"/>).</t>

<t>When online signing is used, the authoritative server holds the
private zone-signing key and uses this key to synthesize NSEC or NSEC3
responses on the fly (e.g.  NSEC3 White Lies (NSEC3-WL) or
Minimally-Covering NSEC, both described in <xref target="RFC7129"/>).  Because the
synthesized response only contains information about the queried name
(but not about any other name in the zone), offline zone enumeration
is not possible.  However, because the authoritative server holds the
private zone-signing key, integrity is lost if the authoritative
server is compromised.</t>

<texttable>
      <ttcol align='left'>Scheme</ttcol>
      <ttcol align='right'>Integrity vs network attacks?</ttcol>
      <ttcol align='right'>Integrity vs compromised auth. server?</ttcol>
      <ttcol align='right'>Prevents offline zone enumeration?</ttcol>
      <ttcol align='right'>Online crypto?</ttcol>
      <c>Unsigned</c>
      <c>NO</c>
      <c>NO</c>
      <c>YES</c>
      <c>NO</c>
      <c>NSEC</c>
      <c>YES</c>
      <c>YES</c>
      <c>NO</c>
      <c>NO</c>
      <c>NSEC3</c>
      <c>YES</c>
      <c>YES</c>
      <c>NO</c>
      <c>NO</c>
      <c>NSEC3-WL</c>
      <c>YES</c>
      <c>NO</c>
      <c>YES</c>
      <c>YES</c>
      <c>NSEC5</c>
      <c>YES</c>
      <c>YES</c>
      <c>YES</c>
      <c>YES</c>
</texttable>

<t>NSEC5 prevents offline zone enumeration and also protects integrity
even if a zone's authoritative server is compromised.  To do this,
NSEC5 replaces the unkeyed cryptographic hash function used in NSEC3
with a verifiable random function (VRF) <xref target="MRV99"/>.  A VRF is the
public-key version of a keyed cryptographic hash.  Only the holder of
the private VRF key can compute the hash, but anyone with public VRF
key can verify the correctness of the hash.</t>

<t>The public VRF key is distributed in an NSEC5KEY RR, similar to a
DNSKEY RR, and is used to verify NSEC5 hash values.  The private VRF
key is present on all authoritative servers for the zone, and is used
to compute hash values. For every query that elicits a negative
response, the authoritative server hashes the query on the fly using
the private VRF key, and also returns the corresponding precomputed
NSEC5 record(s). In contrast to the online signing approach
<xref target="RFC7129"/>, the private key that is present on all authoritative
servers for NSEC5 cannot be used to modify the zone contents.</t>

<t>Like online signing approaches, NSEC5 requires the authoritative
server to perform online public key cryptographic operations for every
query eliciting a denying response.  This is necessary; <xref target="nsec5"/>
proved that online cryptography is required to prevent offline zone
enumeration while still protecting the integrity of zone contents
against network attacks.</t>

<t>NSEC5 is not intended to replace NSEC or NSEC3. It is an alternative
mechanism for authenticated denial of existence.  This document
specifies NSEC5 based on the FIPS 186-3 P-256 elliptic curve and on
the Ed25519 elliptic curve. A formal cryptographic proof of security
for elliptic curve (EC) NSEC5 is in <xref target="nsec5ecc"/>.</t>

</section>
<section anchor="requirements" title="Requirements">

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
"SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
document are to be interpreted as described in <xref target="RFC2119"/>.</t>

</section>
<section anchor="terminology" title="Terminology">

<t>The reader is assumed to be familiar with the basic DNS and DNSSEC
concepts described in <xref target="RFC1034"/>, <xref target="RFC1035"/>, <xref target="RFC4033"/>,
<xref target="RFC4034"/>, and <xref target="RFC4035"/>; subsequent RFCs that update them in
<xref target="RFC2136"/>, <xref target="RFC2181"/>, <xref target="RFC2308"/>, <xref target="RFC5155"/>, and <xref target="RFC7129"/>;
and DNS terms in <xref target="RFC7719"/>.</t>

<t>The following terminology is used through this document:</t>

<t><list style="hanging">
  <t hangText='Base32hex:'>
  The "Base 32 Encoding with Extended Hex Alphabet" as specified
in <xref target="RFC4648"/>. The padding characters ("=") are not
used in the NSEC5 specification.</t>
  <t hangText='Base64:'>
  The "Base 64 Encoding" as specified in <xref target="RFC4648"/>.</t>
  <t hangText='QNAME:'>
  The domain name being queried (query name).</t>
  <t hangText='Private NSEC5 key:'>
  The private key for the verifiable random function (VRF).</t>
  <t hangText='Public NSEC5 key:'>
  The public key for the VRF.</t>
  <t hangText='NSEC5 proof:'>
  A VRF proof. The holder of
the private NSEC5 key (e.g., authoritative server) can
compute the NSEC5 proof for an input domain name.
Anyone who knows the public VRF key can verify
that the NSEC5 proof corresponds to the input domain name.</t>
  <t hangText='NSEC5 hash:'>
  A cryptographic digest of an NSEC5 proof. If the NSEC5
proof is known, anyone can compute its corresponding NSEC5 hash.</t>
  <t hangText='NSEC5 algorithm:'>
  A triple of VRF algorithms that compute an NSEC5 proof,
verify an NSEC5 proof, and process an NSEC5 proof to
obtain its NSEC5 hash.</t>
</list></t>

</section>
</section>
<section anchor="backward-compatibility" title="Backward Compatibility">

<t>The specification describes a protocol change that is not backward
compatible with <xref target="RFC4035"/> and <xref target="RFC5155"/>. An NSEC5-unaware resolver
will fail to validate responses introduced by this document.</t>

<t>To prevent NSEC5-unaware resolvers from attempting to validate the
responses, new DNSSEC algorithms identifiers are introduced in
<xref target="iana_considerations"/> which alias existing algorithm numbers. The
zones signed according to this specification MUST use only these
algorithm identifiers, thus NSEC5-unaware resolvers will treat the
zone as insecure.</t>

</section>
<section anchor="how-nsec5-works" title="How NSEC5 Works">

<t>With NSEC5, the original domain name is hashed using the VRF
using the following steps:</t>

<t><list style="numbers">
  <t>The domain name is processed using a VRF keyed with the private
  NSEC5 key to obtain the NSEC5 proof.  Anyone who knows the public
  NSEC5 key, normally acquired via an NSEC5KEY RR, can verify that a
  given NSEC5 proof corresponds to a given domain name.</t>
  <t>The NSEC5 proof is then processed using a publicly-computable VRF
  proof-to-hash function to obtain the NSEC5 hash.  The NSEC5 hash can
  be computed by anyone who knows the input NSEC5 proof.</t>
</list></t>

<t>The NSEC5 hash determines the position of a domain name in an NSEC5
chain.</t>

<t>To sign a zone, the private NSEC5 key is used to compute the NSEC5
hashes for each name in the zone. These NSEC5 hashes are sorted in
canonical order <xref target="RFC4034"/>, and each consecutive pair forms an NSEC5
RR.  Each NSEC5 RR is signed offline using the private zone-signing
key.  The resulting signed chain of NSEC5 RRs is provided to all
authoritative servers for the zone, along with the private NSEC5 key.</t>

<t>To prove non-existence of a particular domain name in response to a
query, the server uses the private NSEC5 key to compute the NSEC5
proof and NSEC5 hash corresponding to the queried name.  The server
then identifies the NSEC5 RR that covers the NSEC5 hash, and responds
with this NSEC5 RR and its corresponding RRSIG signature RRset, as
well as a synthesized NSEC5PROOF RR that contains the NSEC5 proof
corresponding to the queried name.</t>

<t>To validate the response, the client verifies the following items:</t>

<t><list style="symbols">
  <t>The client uses the public NSEC5 key, normally acquired from the
NSEC5KEY RR, to verify that the NSEC5 proof in the NSEC5PROOF RR
corresponds to the queried name.</t>
  <t>The client uses the VRF proof-to-hash function to compute the NSEC5
hash from the NSEC5 proof in the NSEC5PROOF RR.  The client verifies
that the NSEC5 hash is covered by the NSEC5 RR.</t>
  <t>The client verifies that the NSEC5 RR is validly signed by the RRSIG
RRset.</t>
</list></t>

</section>
<section anchor="nsec5-algorithms" title="NSEC5 Algorithms">

<t>The algorithms used for NSEC5 authenticated denial are independent of
the algorithms used for DNSSEC signing. An NSEC5 algorithm defines how
the NSEC5 proof and the NSEC5 hash are computed and validated.</t>

<t>The input for the NSEC5 proof computation is an RR owner name in
<xref target="RFC4034"/> canonical wire format followed by a private NSEC5 key.
The output is an octet string.</t>

<t>The input for the NSEC5 hash computation is the corresponding NSEC5
proof; the output is an octet string.</t>

<t>This document defines the EC-P256-SHA256 NSEC5 algorithm as follows:</t>

<t><list style="symbols">
  <t>The NSEC5 proof is computed using an Elliptic Curve VRF with FIPS
186-3 P-256 curve.  The proof computation and verification, and the
proof-to-hash function, are formally specified in <xref target="ecvrf"/>.  The
curve parameters are specified in <xref target="FIPS-186-3"/> (Section D.1.2.3)
and <xref target="RFC5114"/> (Section 2.6).</t>
  <t>The NSEC5 hash is the x-coordinate of the group element gamma from
the NSEC5 proof (specified in <xref target="ecvrf"/>), encoded as a 32-octet
unsigned integer in network byte order. In practice, the hash is a
substring of the proof ranging from 2nd through 33th octet of the
proof, inclusive.</t>
  <t>The public key format to be used in the NSEC5KEY RR is defined in
Section 4 of <xref target="RFC6605"/> and thus is the same as the format used to
store ECDSA public keys in DNSKEY RRs.</t>
</list></t>

<t>This document defines the EC-ED25519-SHA256 NSEC5 algorithm as follows:</t>

<t><list style="symbols">
  <t>The NSEC5 proof and NSEC5 hash are the same as with EC-P256-SHA256
but using Ed25519 elliptic curve with parameters defined in
<xref target="RFC7748"/> Section 4.1.</t>
  <t>The public key format to be used in the NSEC5KEY RR is defined in
Section 3 of <xref target="RFC8080"/> and thus is the same as the format used to
store Ed25519 public keys in DNSKEY RRs.</t>
</list></t>

</section>
<section anchor="the-nsec5key-resource-record" title="The NSEC5KEY Resource Record">

<t>The NSEC5KEY RR stores a public NSEC5 key. The key allows clients to
validate an NSEC5 proof sent by a server.</t>

<section anchor="nsec5key-rdata-wire-format" title="NSEC5KEY RDATA Wire Format">

<t>The RDATA for the NSEC5KEY RR is as shown below:</t>

<figure><artwork><![CDATA[
                     1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|   Algorithm   |                  Public Key                   /
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t>Algorithm is a single octet identifying the NSEC5 algorithm.</t>

<t>Public Key is a variable-sized field holding public key material for
NSEC5 proof verification.</t>

</section>
<section anchor="nsec5key-rdata-presentation-format" title="NSEC5KEY RDATA Presentation Format">

<t>The presentation format of the NSEC5KEY RDATA is as follows:</t>

<t>The Algorithm field is represented as an unsigned decimal integer.</t>

<t>The Public Key field is represented in Base64 encoding. Whitespace is
allowed within the Base64 text.</t>

</section>
</section>
<section anchor="the-nsec5-resource-record" title="The NSEC5 Resource Record">

<t>The NSEC5 RR provides authenticated denial of existence for an RRset
or domain name. One NSEC5 RR represents one piece of an NSEC5 chain,
proving existence of the owner name and non-existence of other domain
names in the part of the hashed domain space covered until the next
owner name hashed in the RDATA.</t>

<section anchor="nsec5-rdata-wire-format" title="NSEC5 RDATA Wire Format">

<t>The RDATA for the NSEC5 RR is as shown below:</t>

<figure><artwork><![CDATA[
                     1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|            Key Tag            |     Flags     |  Next Length  |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                     Next Hashed Owner Name                    /
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
/                         Type Bit Maps                         /
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t>The Key Tag field contains the key tag value of the NSEC5KEY RR that
validates the NSEC5 RR, in network byte order. The value is computed
from the NSEC5KEY RDATA using the same algorithm, which is used to
compute key tag values for DNSKEY RRs. The algorithm is defined in
<xref target="RFC4034"/>.</t>

<t>The Flags field is a single octet. The meaning of individual bits of
the field is defined in <xref target="nsec5_flags"/>.</t>

<t>The Next Length field is an unsigned single octet specifying the
length of the Next Hashed Owner Name field in octets.</t>

<t>The Next Hashed Owner Name field is a sequence of binary octets. It
contains an NSEC5 hash of the next domain name in the NSEC5 chain.</t>

<t>Type Bit Maps is a variable-sized field encoding RR types present at
the original owner name matching the NSEC5 RR. The format of the field
is equivalent to the format used in the NSEC3 RR, described in
<xref target="RFC5155"/>.</t>

</section>
<section anchor="nsec5_flags" title="NSEC5 Flags Field">

<t>The following one-bit NSEC5 flags are defined:</t>

<figure><artwork><![CDATA[
 0 1 2 3 4 5 6 7
+-+-+-+-+-+-+-+-+
|           |W|O|
+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style='empty'>
  <t>O - Opt-Out flag</t>
</list></t>

<t><list style='empty'>
  <t>W - Wildcard flag</t>
</list></t>

<t>All the other flags are reserved for future use and MUST be zero.</t>

<t>The Opt-Out flag has the same semantics as in NSEC3. The definition
and considerations in <xref target="RFC5155"/> are valid, except that NSEC3 is
replaced by NSEC5.</t>

<t>The Wildcard flag indicates that a wildcard synthesis is possible at
the original domain name level (i.e., there is a wildcard node
immediately descending from the immediate ancestor of the original
domain name).  The purpose of the Wildcard flag is to reduce the
maximum number of RRs required for an authenticated denial of
existence proof, as originally described in <xref target="I-D.gieben-nsec4"/>
Section 7.2.1.</t>

</section>
<section anchor="nsec5-rdata-presentation-format" title="NSEC5 RDATA Presentation Format">

<t>The presentation format of the NSEC5 RDATA is as follows:</t>

<t>The Key Tag field is represented as an unsigned decimal integer.</t>

<t>The Flags field is represented as an unsigned decimal integer.</t>

<t>The Next Length field is not represented.</t>

<t>The Next Hashed Owner Name field is represented as a sequence of
case-insensitive Base32hex digits without any whitespace and without
padding.</t>

<t>The Type Bit Maps representation is equivalent to the representation
used in NSEC3 RR, described in <xref target="RFC5155"/>.</t>

</section>
</section>
<section anchor="the-nsec5proof-resource-record" title="The NSEC5PROOF Resource Record">

<t>The NSEC5PROOF record is not to be included in the zone file.  The
NSEC5PROOF record contains the NSEC5 proof, proving the position of
the owner name in an NSEC5 chain.</t>

<section anchor="nsec5proof_rdata" title="NSEC5PROOF RDATA Wire Format">

<t>The RDATA for the NSEC5PROOF RR is shown below:</t>

<figure><artwork><![CDATA[
                     1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|            Key Tag            |        Owner Name Hash        /
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t>Key Tag field contains the key tag value of the NSEC5KEY RR that
validates the NSEC5PROOF RR, in network byte order.</t>

<t>Owner Name Hash is a variable-sized sequence of binary octets encoding
the NSEC5 proof of the owner name of the RR.</t>

</section>
<section anchor="nsec5proof-rdata-presentation-format" title="NSEC5PROOF RDATA Presentation Format">

<t>The presentation format of the NSEC5PROOF RDATA is as follows:</t>

<t>The Key Tag field is represented as an unsigned decimal integer.</t>

<t>The Owner Name Hash is represented in Base64 encoding. Whitespace is
allowed within the Base64 text.</t>

</section>
</section>
<section anchor="nsec5_proofs" title="Types of Authenticated Denial of Existence with NSEC5">

<t>This section summarizes all possible types of authenticated denial of
existence.  For each type the following lists are included:</t>

<t><list style="numbers">
  <t>Facts to prove: the minimum amount of information that an
  authoritative server must provide to a client to assure the client
  that the response content is valid.</t>
  <t>Authoritative server proofs: the names for which the NSEC5PROOF RRs
  are synthesized and added into the response along the NSEC5 RRs
  matching or covering each such name. These records together prove
  the listed facts.</t>
  <t>Validator checks: the individual checks that a validating server is
  required to perform on a response. The response content is
  considered valid only if all of the checks pass.</t>
</list></t>

<t>If NSEC5 is said to match a domain name, the owner name of the NSEC5
RR has to be equivalent to an NSEC5 hash of that domain name. If an
NSEC5 RR is said to cover a domain name, the NSEC5 hash of the domain
name must sort in canonical order between that NSEC5 RR's Owner Name
and Next Hashed Owner Name.</t>

<section anchor="name-error-responses" title="Name Error Responses">

<t>Facts to prove:</t>

<t><list style='empty'>
  <t>No RRset matching the QNAME exists.</t>
</list></t>

<t><list style='empty'>
  <t>No RRset matching the QNAME via wildcard expansion exists.</t>
</list></t>

<t><list style='empty'>
  <t>The QNAME does not fall into a delegation.</t>
</list></t>

<t><list style='empty'>
  <t>The QNAME does not fall into a DNAME redirection.</t>
</list></t>

<t>Authoritative server proofs:</t>

<t><list style='empty'>
  <t>NSEC5PROOF for closest encloser and matching NSEC5 RR.</t>
</list></t>

<t><list style='empty'>
  <t>NSEC5PROOF for next closer name and covering NSEC5 RR.</t>
</list></t>

<t>Validator checks:</t>

<t><list style='empty'>
  <t>Closest encloser is in the zone.</t>
</list></t>

<t><list style='empty'>
  <t>Closest encloser has the Wildcard flag cleared.</t>
</list></t>

<t><list style='empty'>
  <t>Closest encloser does not have NS without SOA in the Type Bit Map.</t>
</list></t>

<t><list style='empty'>
  <t>Closest encloser does not have DNAME in the Type Bit Maps.</t>
</list></t>

<t><list style='empty'>
  <t>Next closer name is derived correctly.</t>
</list></t>

<t><list style='empty'>
  <t>Next closer name is not in the zone.</t>
</list></t>

</section>
<section anchor="no-data-responses" title="No Data Responses">

<t>The processing of a No Data response for DS QTYPE differs if the
Opt-Out is in effect. For DS QTYPE queries, the validator has two
possible checking paths.  The correct path can be simply decided by
inspecting if the NSEC5 RR in the response matches the QNAME.</t>

<t>Note that the Opt-Out is valid only for DS QTYPE queries.</t>

<section anchor="no-data-response-opt-out-not-in-effect" title="No Data Response, Opt-Out Not In Effect">

<t>Facts to prove:</t>

<t><list style='empty'>
  <t>An RRset matching the QNAME exists.</t>
</list></t>

<t><list style='empty'>
  <t>No QTYPE RRset matching the QNAME exists.</t>
</list></t>

<t><list style='empty'>
  <t>No CNAME RRset matching the QNAME exists.</t>
</list></t>

<t>Authoritative server proofs:</t>

<t><list style='empty'>
  <t>NSEC5PROOF for the QNAME and matching NSEC5 RR.</t>
</list></t>

<t>Validator checks:</t>

<t><list style='empty'>
  <t>The QNAME is in the zone.</t>
</list></t>

<t><list style='empty'>
  <t>The QNAME does not have QTYPE in the Type Bit Map.</t>
</list></t>

<t><list style='empty'>
  <t>The QNAME does not have CNAME in the Type Bit Map.</t>
</list></t>

</section>
<section anchor="no-data-response-opt-out-in-effect" title="No Data Response, Opt-Out In Effect">

<t>Facts to prove:</t>

<t><list style='empty'>
  <t>The delegation is not covered by the NSEC5 chain.</t>
</list></t>

<t>Authoritative server proofs:</t>

<t><list style='empty'>
  <t>NSEC5PROOF for closest provable encloser and matching NSEC5 RR.</t>
</list></t>

<t>Validator checks:</t>

<t><list style='empty'>
  <t>Closest provable encloser is in zone.</t>
</list></t>

<t><list style='empty'>
  <t>Closest provable encloser covers (not matches) the QNAME.</t>
</list></t>

<t><list style='empty'>
  <t>Closest provable encloser has the Opt-Out flag set.</t>
</list></t>

</section>
</section>
<section anchor="wildcard-responses" title="Wildcard Responses">

<t>Facts to prove:</t>

<t><list style='empty'>
  <t>No RRset matching the QNAME exists.</t>
</list></t>

<t><list style='empty'>
  <t>No wildcard closer to the QNAME exists.</t>
</list></t>

<t>Authoritative server proofs:</t>

<t><list style='empty'>
  <t>NSEC5PROOF for next closer name and covering NSEC5 RR.</t>
</list></t>

<t>Validator checks:</t>

<t><list style='empty'>
  <t>Next closer name is derived correctly.</t>
</list></t>

<t><list style='empty'>
  <t>Next closer name is not in the zone.</t>
</list></t>

</section>
<section anchor="wildcard-no-data-responses" title="Wildcard No Data Responses">

<t>Facts to prove:</t>

<t><list style='empty'>
  <t>No RRset matching the QNAME exists.</t>
</list></t>

<t><list style='empty'>
  <t>No QTYPE RRset exists at the wildcard matching the QNAME.</t>
</list></t>

<t><list style='empty'>
  <t>No CNAME RRset exists at the wildcard matching the QNAME.</t>
</list></t>

<t><list style='empty'>
  <t>No wildcard closer to the QNAME exists.</t>
</list></t>

<t>Authoritative server proofs:</t>

<t><list style='empty'>
  <t>NSEC5PROOF for source of synthesis (i.e., wildcard at closest
encloser) and matching NSEC5 RR.</t>
</list></t>

<t><list style='empty'>
  <t>NSEC5PROOF for next closer name and covering NSEC5 RR.</t>
</list></t>

<t>Validator checks:</t>

<t><list style='empty'>
  <t>Source of synthesis matches the QNAME.</t>
</list></t>

<t><list style='empty'>
  <t>Source of synthesis does not have QTYPE in the Type Bit Map.</t>
</list></t>

<t><list style='empty'>
  <t>Source of synthesis does not have CNAME in the Type Bit Map.</t>
</list></t>

<t><list style='empty'>
  <t>Next closer name is derived correctly.</t>
</list></t>

<t><list style='empty'>
  <t>Next closer name is not in the zone.</t>
</list></t>

</section>
</section>
<section anchor="authoritative-server-considerations" title="Authoritative Server Considerations">

<section anchor="zone_signing" title="Zone Signing">

<t>Zones using NSEC5 MUST satisfy the same properties as described in
Section 7.1 of <xref target="RFC5155"/>, with NSEC3 replaced by NSEC5. In addition,
the following conditions MUST be satisfied as well:</t>

<t><list style="symbols">
  <t>If the original owner name has a wildcard label immediately
descending from the original owner name, the corresponding NSEC5 RR
MUST have the Wildcard flag set in the Flags field. Otherwise, the
flag MUST be cleared.</t>
  <t>The zone apex MUST include an NSEC5KEY RRset containing a NSEC5
public key allowing verification of the current NSEC5 chain.</t>
</list></t>

<t>The following steps describe one possible method to properly add
required NSEC5 related records into a zone. This is not the only such
existing method.</t>

<t><list style="numbers">
  <t>Select an algorithm for NSEC5.  Generate the public and private NSEC5 keys.</t>
  <t>Add an NSEC5KEY RR into the zone apex containing the public NSEC5 key.</t>
  <t>For each unique original domain name in the zone and each empty
  non-terminal, add an NSEC5 RR. If Opt-Out is used, owner names of
  unsigned delegations MAY be excluded.  <vspace blankLines='1'/>
A. The owner name of the NSEC5 RR is the NSEC5 hash of the
   original owner name encoded in Base32hex without padding,
   prepended as a single label to the zone name.  <vspace blankLines='1'/>
B. Set the Key Tag field to be the key tag corresponding
   to the public NSEC5 key.  <vspace blankLines='1'/>
C. Clear the Flags field. If Opt-Out is being used, set the Opt-Out
   flag. If there is a wildcard label directly descending from the
   original domain name, set the Wildcard flag. Note that the
   wildcard can be an empty non-terminal (i.e., the wildcard synthesis
   does not take effect and therefore the flag is not to be set).  <vspace blankLines='1'/>
D. Set the Next Length field to a value determined by the used
   NSEC5 algorithm. Leave the Next Hashed Owner Name field blank.  <vspace blankLines='1'/>
E. Set the Type Bit Maps field based on the RRsets present at the
   original owner name.</t>
  <t>Sort the set of NSEC5 RRs into canonical order.</t>
  <t>For each NSEC5 RR, set the Next Hashed Owner Name field by using
  the owner name of the next NSEC5 RR in the canonical order. If the
  updated NSEC5 is the last NSEC5 RR in the chain, the owner name of the
  first NSEC5 RR in the chain is used instead.</t>
</list></t>

<t>The NSEC5KEY and NSEC5 RRs MUST have the same class as the zone SOA
RR.  Also the NSEC5 RRs SHOULD have the same TTL value as the SOA
minimum TTL field.</t>

<t>Notice that a use of Opt-Out is not indicated in the zone. This does
not affect the ability of a server to prove insecure delegations. The
Opt-Out MAY be part of the zone-signing tool configuration.</t>

<section anchor="precompute" title="Precomputing Closest Provable Encloser Proofs">

<t>The worst-case scenario when answering a negative query with NSEC5
requires authoritative server to respond with two NSEC5PROOF RRs and
two NSEC5 RRs. Per <xref target="nsec5_proofs"/>, one pair of NSEC5PROOF and NSEC5
RRs corresponds to the closest provable encloser, and the other pair
corresponds to the next closer name.  The NSEC5PROOF corresponding to
the next closer name MUST be computed on the fly by the authoritative
server when responding to the query. However, the NSEC5PROOF
corresponding to the closest provable encloser MAY be precomputed and
stored as part of zone signing.</t>

<t>Precomputing NSEC5PROOF RRs can halve the number of online
cryptographic computations required when responding to a negative
query. NSEC5PROOF RRs MAY be precomputed as part of zone signing as
follows: For each NSEC5 RR, compute an NSEC5PROOF RR corresponding to
the original owner name of the NSEC5 RR. The content of the
precomputed NSEC5PROOF record MUST be the same as if the record was
computed on the fly when serving the zone.  NSEC5PROOF records are not
part of the zone and SHOULD be stored separately from the zone file.</t>

</section>
</section>
<section anchor="zone-serving" title="Zone Serving">

<t>This specification modifies DNSSEC-enabled DNS responses generated by
authoritative servers. In particular, it replaces use of NSEC or NSEC3
RRs in such responses with NSEC5 RRs and adds NSEC5PROOF RRs.</t>

<t>According to the type of a response, an authoritative server MUST
include NSEC5 RRs in the response, as defined in <xref target="nsec5_proofs"/>. For
each NSEC5 RR in the response, a corresponding RRSIG RRset and an
NSEC5PROOF MUST be added as well. The NSEC5PROOF RR has its owner name
set to the domain name required according to <xref target="nsec5_proofs"/>. The
class and TTL of the NSEC5PROOF RR MUST be the same as the class and
TTL value of the corresponding NSEC5 RR. The RDATA payload of the
NSEC5PROOF is set according to the description in
<xref target="nsec5proof_rdata"/>.</t>

<t>Notice that the NSEC5PROOF owner name can be a wildcard (e.g., source
of synthesis proof in wildcard No Data responses). The name also
always matches the domain name required for the proof while the NSEC5
RR may only cover (not match) the name in the proof (e.g., closest
encloser in Name Error responses).</t>

<t>If NSEC5 is used, an answering server MUST use exactly one NSEC5 chain
for one signed zone.</t>

<t>NSEC5 MUST NOT be used in parallel with NSEC, NSEC3, or any other
authenticated denial of existence mechanism that allows for
enumeration of zone contents, as this would defeat a principal
security goal of NSEC5.</t>

<t>Similarly to NSEC3, the owner names of NSEC5 RRs are not represented
in the NSEC5 chain and therefore NSEC5 records deny their own
existence. The desired behavior caused by this paradox is the same as
described in Section 7.2.8 of <xref target="RFC5155"/>.</t>

</section>
<section anchor="nsec5key-rollover-mechanism" title="NSEC5KEY Rollover Mechanism">

<t>Replacement of the NSEC5 key implies generating a new NSEC5 chain. The
NSEC5KEY rollover mechanism is similar to "Pre-Publish Zone Signing
Key Rollover" as specified in <xref target="RFC6781"/>. The NSEC5KEY rollover MUST
be performed as a sequence of the following steps:</t>

<t><list style="numbers">
  <t>A new public NSEC5 key is added into the NSEC5KEY RRset in the zone
  apex.</t>
  <t>The old NSEC5 chain is replaced by a new NSEC5 chain constructed
  using the new key. This replacement MUST happen as a single atomic
  operation; the server MUST NOT be responding with RRs from both the
  new and old chain at the same time.</t>
  <t>The old public key is removed from the NSEC5KEY RRset in the zone
  apex.</t>
</list></t>

<t>The minimum delay between steps 1 and 2 MUST be the time it takes for
the data to propagate to the authoritative servers, plus the TTL value
of the old NSEC5KEY RRset.</t>

<t>The minimum delay between steps 2 and 3 MUST be the time it takes for
the data to propagate to the authoritative servers, plus the maximum
zone TTL value of any of the data in the previous version of the zone.</t>

</section>
<section anchor="secondary-servers" title="Secondary Servers">

<t>This document does not define mechanism to distribute private NSEC5 keys.
See <xref target="keyleak"/> for security considerations for private NSEC5 keys.</t>

</section>
<section anchor="zones-using-unknown-nsec5-algorithms" title="Zones Using Unknown NSEC5 Algorithms">

<t>Zones that are signed with an unknown NSEC5 algorithm or with an
unavailable private NSEC5 key cannot be effectively served. Such zones
SHOULD be rejected when loading and servers SHOULD respond with
RCODE=2 (Server failure) when handling queries that would fall under
such zones.</t>

</section>
<section anchor="dynamic-updates" title="Dynamic Updates">

<t>A zone signed using NSEC5 MAY accept dynamic updates <xref target="RFC2136"/>.  The
changes to the zone MUST be performed in a way that ensures that the
zone satisfies the properties specified in <xref target="zone_signing"/> at any
time.  The process described in <xref target="RFC5155"/> Section 7.5 describes how
to handle the issues surrounding the handling of empty non-terminals
as well as Opt-Out.</t>

<t>It is RECOMMENDED that the server rejects all updates containing
changes to the NSEC5 chain and its related RRSIG RRs, and performs
itself any required alternations of the NSEC5 chain induced by the
update.  Alternatively, the server MUST verify that all the properties
are satisfied prior to performing the update atomically.</t>

</section>
</section>
<section anchor="resolver-considerations" title="Resolver Considerations">

<t>The same considerations as described in Section 9 of <xref target="RFC5155"/> for
NSEC3 apply to NSEC5. In addition, as NSEC5 RRs can be validated only
with appropriate NSEC5PROOF RRs, the NSEC5PROOF RRs MUST be all
together cached and included in responses with NSEC5 RRs.</t>

</section>
<section anchor="validator-considerations" title="Validator Considerations">

<section anchor="validating-responses" title="Validating Responses">

<t>The validator MUST ignore NSEC5 RRs with Flags field values other than
the ones defined in <xref target="nsec5_flags"/>.</t>

<t>The validator MAY treat responses as bogus if the response contains
NSEC5 RRs that refer to a different NSEC5KEY.</t>

<t>According to a type of a response, the validator MUST verify all
conditions defined in <xref target="nsec5_proofs"/>. Prior to making decision based
on the content of NSEC5 RRs in a response, the NSEC5 RRs MUST be
validated.</t>

<t>To validate a denial of existence, public NSEC5 keys for the zone are
required in addition to DNSSEC public keys. Similarly to DNSKEY RRs,
the NSEC5KEY RRs are present at the zone apex.</t>

<t>The NSEC5 RR is validated as follows:</t>

<t><list style="numbers">
  <t>Select a correct public NSEC5 key to validate the NSEC5 proof. The
  Key Tag value of the NSEC5PROOF RR must match with the key tag value
  computed from the NSEC5KEY RDATA.</t>
  <t>Validate the NSEC5 proof present in the NSEC5PROOF Owner Name Hash
  field using the public NSEC5 key. If there are multiple NSEC5KEY RRs
  matching the key tag, at least one of the keys must validate the
  NSEC5 proof.</t>
  <t>Compute the NSEC5 hash value from the NSEC5 proof and check if the
  response contains NSEC5 RR matching or covering the computed NSEC5
  hash.  The TTL values of the NSEC5 and NSEC5PROOF RRs must be the
  same.</t>
  <t>Validate the signature on the NSEC5 RR.</t>
</list></t>

<t>If the NSEC5 RR fails to validate, it MUST be ignored. If some of the
conditions required for an NSEC5 proof are not satisfied, the response
MUST be treated as bogus.</t>

<t>Notice that determining the closest encloser and next closer name in
NSEC5 is easier than in NSEC3. NSEC5 and NSEC5PROOF RRs are always
present in pairs in responses and the original owner name of the NSEC5
RR matches the owner name of the NSEC5PROOF RR.</t>

</section>
<section anchor="validating-referrals-to-unsigned-subzones" title="Validating Referrals to Unsigned Subzones">

<t>The same considerations as defined in Section 8.9 of <xref target="RFC5155"/> for
NSEC3 apply to NSEC5.</t>

</section>
<section anchor="responses-with-unknown-nsec5-algorithms" title="Responses With Unknown NSEC5 Algorithms">

<t>A validator MUST ignore NSEC5KEY RRs with unknown NSEC5
algorithms. The practical result of this is that zones signed with
unknown algorithms will be considered bogus.</t>

</section>
</section>
<section anchor="special-considerations" title="Special Considerations">

<section anchor="transition-mechanism" title="Transition Mechanism">

<t>[TODO: The following information will be covered.]</t>

<t><list style="symbols">
  <t>Transition to NSEC5 from NSEC/NSEC3</t>
  <t>Transition from NSEC5 to NSEC/NSEC3</t>
  <t>Transition to new NSEC5 algorithms</t>
</list></t>

</section>
<section anchor="private-nsec5-keys" title="Private NSEC5 keys">

<t>This document does not define a format to store private NSEC5
keys. Use of a standardized and adopted format is RECOMMENDED.</t>

<t>The private NSEC5 key MAY be shared between multiple zones, however a
separate key is RECOMMENDED for each zone.</t>

</section>
<section anchor="domain-name-length-restrictions" title="Domain Name Length Restrictions">

<t>NSEC5 creates additional restrictions on domain name lengths. In
particular, zones with names that, when converted into hashed owner
names, exceed the 255 octet length limit imposed by <xref target="RFC1035"/> cannot
use this specification.</t>

<t>The actual maximum length of a domain name depends on the length of
the zone name and the NSEC5 algorithm used.</t>

<t>All NSEC5 algorithms defined in this document use 256-bit NSEC5 hash
values.  Such a value can be encoded in 52 characters in Base32hex
without padding.  When constructing the NSEC5 RR owner name, the
encoded hash is prepended to the name of the zone as a single label
which includes the length field of a single octet.  The maximum length
of the zone name in wire format using the 256-bit hash is therefore
202 octets (255 - 53).</t>

</section>
</section>
<section anchor="implementation-status" title="Implementation Status">

<t>NSEC5 has been implemented for the Knot DNS authoritative server
(version 1.6.4) and the Unbound recursive server (version 1.5.9).  The
implementations did not introduce additional library dependencies; all
cryptographic primitives are already present in OpenSSL v1.0.2j, which
is used by both implementations.  The implementations support the full
spectrum of negative responses, (i.e., NXDOMAIN, NODATA, Wildcard,
Wildcard NODATA, and unsigned delegation) using the EC-P256-SHA256
algorithm. The code is deliberately modular, so that the
EC-ED25519-SHA256 algorithm could be implemented by using the Ed25519
elliptic curve <xref target="RFC8080"/> as a drop-in replacement for the P256
elliptic curve.  The authoritative server implements the optimization
from <xref target="precompute"/> to precompute the NSEC5PROOF RRs matching each
NSEC5 record.</t>

</section>
<section anchor="performance-considerations" title="Performance Considerations">

<t>The performance of NSEC5 has been evaluated in <xref target="nsec5ecc"/>.</t>

</section>
<section anchor="security-considerations" title="Security Considerations">

<section anchor="zea" title="Zone Enumeration Attacks">

<t>NSEC5 is robust to zone enumeration via offline dictionary attacks by
any attacker that does not know the private NSEC5 key. Without the
private NSEC5 key, that attacker cannot compute the NSEC5 proof that
corresponds to a given domain name.  The only way it can learn the
NSEC5 proof value for a domain name is by querying the authoritative
server for that name. Without the NSEC5 proof value, the attacker
cannot learn the NSEC5 hash value. Thus, even an attacker that
collects the entire chain of NSEC5 RR for a zone cannot use offline
attacks to "reverse" that NSEC5 hash values in these NSEC5 RR and thus
learn which names are present in the zone.  A formal cryptographic
proof of this property is in <xref target="nsec5"/> and <xref target="nsec5ecc"/>.</t>

</section>
<section anchor="keyleak" title="Compromise of the Private NSEC5 Key">

<t>NSEC5 requires authoritative servers to hold the private NSEC5 key,
but not the private zone-signing keys or the private key-signing keys
for the zone.</t>

<t>The private NSEC5 key cannot be used to modify zone contents, because
zone contents are signed using the private zone-signing key.  As such,
a compromise of the private NSEC5 key does not compromise the
integrity of the zone.  An adversary that learns the private NSEC5 key
can, however, perform offline zone-enumeration attacks.  For this
reason, the private NSEC5 key need only be as secure as the DNSSEC
records whose privacy (against zone enumeration) is being protected by
NSEC5.  A formal cryptographic proof of this property is in <xref target="nsec5"/>
and <xref target="nsec5ecc"/>.</t>

<t>To preserve this property of NSEC5, the private NSEC5 key MUST be
different from the private zone-signing keys or key-signing keys for
the zone.</t>

</section>
<section anchor="keylen" title="Key Length Considerations">

<t>The NSEC5 key must be long enough to withstand attacks for as long as
the privacy of the zone contents is important. Even if the NSEC5 key
is rolled frequently, its length cannot be too short, because zone
privacy may be important for a period of time longer than the lifetime
of the key.  For example, an attacker might collect the entire chain
of NSEC5 RR for the zone over one short period, and then, later (even
after the NSEC5 key expires) perform an offline dictionary attack that
attempts to reverse the NSEC5 hash values present in the NSEC5 RRs.
This is in contrast to zone-signing and key-signing keys used in
DNSSEC; these keys, which ensure the authenticity and integrity of the
zone contents, need to remain secure only during their lifetime.</t>

</section>
<section anchor="hashcol" title="NSEC5 Hash Collisions">

<t>If the NSEC5 hash of a QNAME collides with the NSEC5 hash of the owner
name of an NSEC5 RR, it will be impossible to prove the non-existence
of the colliding QNAME. However, the NSEC5 VRFs ensure that obtaining
such a collision is as difficult as obtaining a collision in the
SHA-256 hash function, requiring approximately 2^128 effort. Note that
DNSSEC already relies on the assumption that a cryptographic hash
function is collision-resistant, since these hash functions are used
for generating and validating signatures and DS RRs. See also the
discussion on key lengths in <xref target="nsec5"/>.</t>

</section>
</section>
<section anchor="iana_considerations" title="IANA Considerations">

<t>This document updates the IANA registry "Domain Name System (DNS)
Parameters" in subregistry "Resource Record (RR) TYPEs", by defining
the following new RR types:</t>

<t><list style='empty'>
  <t>NSEC5KEY   value TBD.</t>
</list></t>

<t><list style='empty'>
  <t>NSEC5      value TBD.</t>
</list></t>

<t><list style='empty'>
  <t>NSEC5PROOF value TBD.</t>
</list></t>

<t>This document creates a new IANA registry for NSEC5 algorithms.  This
registry is named "DNSSEC NSEC5 Algorithms". The initial content of
the registry is:</t>

<t><list style='empty'>
  <t>0     is Reserved.</t>
</list></t>

<t><list style='empty'>
  <t>1     is EC-P256-SHA256.</t>
</list></t>

<t><list style='empty'>
  <t>2     is EC-ED25519-SHA256.</t>
</list></t>

<t><list style='empty'>
  <t>3-255 is Available for assignment.</t>
</list></t>

<t>This document updates the IANA registry "DNS Security Algorithm
Numbers" by defining following aliases:</t>

<t><list style='empty'>
  <t>TBD is NSEC5-ECDSAP256SHA256 alias for ECDSAP256SHA256 (13).</t>
</list></t>

<t><list style='empty'>
  <t>TBD is NSEC5-ED25519, alias for ED25519 (15).</t>
</list></t>

</section>
<section anchor="contributors" title="Contributors">

<t>This document would not be possible without help of
Moni Naor (Weizmann Institute),
Sachin Vasant (Cisco Systems),
Leonid Reyzin (Boston University), and
Asaf Ziv (Weizmann Institute)
who contributed to the design of NSEC5.
Ondrej Sury (CZ.NIC Labs), and
Duane Wessels (Verisign Labs)
provided advice on the implementation of NSEC5, and assisted with
evaluating its performance.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC1034;
&RFC1035;
&RFC2119;
&RFC2136;
&RFC2181;
&RFC2308;
&RFC4033;
&RFC4034;
&RFC4035;
&RFC4648;
&RFC5114;
&RFC5155;
&RFC6234;
&RFC6605;
&RFC7748;
&RFC8080;
<reference anchor="FIPS-186-3" >
  <front>
    <title>Digital Signature Standard (DSS)</title>
    <author >
      <organization>National Institute for Standards and Technology</organization>
    </author>
    <date year="2009" month="June"/>
  </front>
  <seriesInfo name="FIPS" value="PUB 186-3"/>
</reference>
<reference anchor="SECG1" target="http://www.secg.org/sec1-v2.pdf">
  <front>
    <title>SEC 1: Elliptic Curve Cryptography</title>
    <author >
      <organization>Standards for Efficient Cryptography Group (SECG)</organization>
    </author>
    <date year="2009" month="May"/>
  </front>
  <seriesInfo name="Version" value="2.0"/>
</reference>


    </references>

    <references title='Informative References'>

&RFC6781;
&RFC7129;
&RFC7719;
&I-D.gieben-nsec4;
<reference anchor="nsec5" target="https://eprint.iacr.org/2014/582.pdf">
  <front>
    <title>NSEC5: Provably Preventing DNSSEC Zone Enumeration</title>
    <author initials="S." surname="Goldberg">
      <organization></organization>
    </author>
    <author initials="M." surname="Naor">
      <organization></organization>
    </author>
    <author initials="D." surname="Papadopoulos">
      <organization></organization>
    </author>
    <author initials="L." surname="Reyzin">
      <organization></organization>
    </author>
    <author initials="S." surname="Vasant">
      <organization></organization>
    </author>
    <author initials="A." surname="Ziv">
      <organization></organization>
    </author>
    <date year="2014" month="July"/>
  </front>
  <seriesInfo name="in" value="NDSS'15"/>
</reference>
<reference anchor="nsec5ecc" target="https://eprint.iacr.org/2017/099.pdf">
  <front>
    <title>Can NSEC5 be Practical for DNSSEC Deployments?</title>
    <author initials="D." surname="Papadopoulos">
      <organization></organization>
    </author>
    <author initials="D." surname="Wessels">
      <organization></organization>
    </author>
    <author initials="S." surname="Huque">
      <organization></organization>
    </author>
    <author initials="J." surname="Vcelak">
      <organization></organization>
    </author>
    <author initials="M." surname="Naor">
      <organization></organization>
    </author>
    <author initials="L." surname="Reyzin">
      <organization></organization>
    </author>
    <author initials="S." surname="Goldberg">
      <organization></organization>
    </author>
    <date year="2017" month="February"/>
  </front>
  <seriesInfo name="in" value="ePrint Cryptology Archive 2017/099"/>
</reference>
<reference anchor="nsec3gpu" >
  <front>
    <title>GPU-Based NSEC3 Hash Breaking</title>
    <author initials="M." surname="Wander">
      <organization></organization>
    </author>
    <author initials="L." surname="Schwittmann">
      <organization></organization>
    </author>
    <author initials="C." surname="Boelmann">
      <organization></organization>
    </author>
    <author initials="T." surname="Weis">
      <organization></organization>
    </author>
    <date year="2014"/>
  </front>
  <seriesInfo name="in" value="IEEE Symp. Network Computing and Applications (NCA)"/>
</reference>
<reference anchor="nsec3walker" target="http://dnscurve.org/nsec3walker.html">
  <front>
    <title>Nsec3 walker</title>
    <author initials="D.J." surname="Bernstein">
      <organization></organization>
    </author>
    <date year="2011"/>
  </front>
</reference>
<reference anchor="nmap-nsec-enum" target="https://nmap.org/nsedoc/scripts/dns-nsec-enum.html">
  <front>
    <title>nmap: dns-nsec-enum</title>
    <author initials="J.R." surname="Bond">
      <organization></organization>
    </author>
    <date year="2011"/>
  </front>
</reference>
<reference anchor="nmap-nsec3-enum" target="https://nmap.org/nsedoc/scripts/dns-nsec3-enum.html">
  <front>
    <title>nmap: dns-nsec3-enum</title>
    <author initials="A." surname="Nikolic">
      <organization></organization>
    </author>
    <author initials="J.R." surname="Bond">
      <organization></organization>
    </author>
    <date year="2011"/>
  </front>
</reference>
<reference anchor="nsec3map" target="https://github.com/anonion0/nsec3map.">
  <front>
    <title>nsec3map with John the Ripper plugin</title>
    <author >
      <organization>anonion0</organization>
    </author>
    <date year="2015"/>
  </front>
</reference>
<reference anchor="ldns-walk" target="http://git.nlnetlabs.nl/ldns/tree/examples/ldns-walk.c">
  <front>
    <title>ldns</title>
    <author >
      <organization>NLNetLabs</organization>
    </author>
    <date year="2015"/>
  </front>
</reference>
<reference anchor="MRV99" >
  <front>
    <title>Verifiable Random Functions</title>
    <author initials="S." surname="Michali">
      <organization></organization>
    </author>
    <author initials="M." surname="Rabin">
      <organization></organization>
    </author>
    <author initials="S." surname="Vadhan">
      <organization></organization>
    </author>
    <date year="1999"/>
  </front>
  <seriesInfo name="in" value="FOCS"/>
</reference>


    </references>


<section anchor="ecvrf" title="Elliptic Curve VRF">

<t>The Elliptic Curve Verifiable Random Function (EC-VRF) operates in a
cyclic group G of prime order with generator g.  The cyclic group G
MAY be over the NIST-P256 elliptic curve, with curve parameters as
specified in <xref target="FIPS-186-3"/> (Section D.1.2.3) and <xref target="RFC5114"/> (Section
2.6).  The group G MAY alternatively be over the Ed25519 elliptic
curve with parameters defined in <xref target="RFC7748"/> (Section 4.1).  The
security of this VRF follows from the decisional Diffie-Hellman (DDH)
assumption in the cyclic group G in the random oracle model. Formal
security proofs for this VRF are in <xref target="nsec5ecc"/>.</t>

<t>Fixed options:</t>

<t><list style='empty'>
  <t>G - elliptic curve (EC) group</t>
</list></t>

<t>Used parameters:</t>

<t><list style='empty'>
  <t>g^x - EC public key</t>
</list></t>

<t><list style='empty'>
  <t>x - EC private key</t>
</list></t>

<t><list style='empty'>
  <t>q - prime order of group G</t>
</list></t>

<t><list style='empty'>
  <t>g - generator of group G</t>
</list></t>

<t>Used primitives:</t>

<t><list style='empty'>
  <t>"" - empty octet string</t>
</list></t>

<t><list style='empty'>
  <t>|| - octet string concatenation</t>
</list></t>

<t><list style='empty'>
  <t>p^k - EC point multiplication</t>
</list></t>

<t><list style='empty'>
  <t>p1*p2 - EC point addition</t>
</list></t>

<t><list style='empty'>
  <t>SHA256 - hash function SHA-256 as specified in <xref target="RFC6234"/></t>
</list></t>

<t><list style='empty'>
  <t>ECP2OS - EC point to octet string conversion with point compression as
specified
in Section 2.3.3 of <xref target="SECG1"/></t>
</list></t>

<t><list style='empty'>
  <t>OS2ECP - octet string to EC point conversion with point compression as
specified
in Section 2.3.4 of <xref target="SECG1"/></t>
</list></t>

<section anchor="ec-vrf-auxiliary-functions" title="EC-VRF Auxiliary Functions">

<section anchor="ec-vrf-hash-to-curve" title="EC-VRF Hash To Curve">

<t>ECVRF_hash_to_curve(m)</t>

<t>Input:</t>

<t><list style='empty'>
  <t>m - value to be hashed, an octet string</t>
</list></t>

<t>Output:</t>

<t><list style='empty'>
  <t>h - hashed value, EC point</t>
</list></t>

<t>Steps:</t>

<t><list style="numbers">
  <t>c = 0</t>
  <t>C = I2OSP(c, 4)</t>
  <t>xc = SHA256(m || C)</t>
  <t>p = 0x02 || xc</t>
  <t>If p is not a valid octet string representing encoded compressed point
  in G:  <list style="letters">
      <t>c = c + 1</t>
      <t>Go to step 2.</t>
    </list></t>
  <t>h = OS2ECP(p)</t>
  <t>Output h</t>
</list></t>

</section>
<section anchor="ec-vrf-hash-points" title="EC-VRF Hash Points">

<t>ECVRF_hash_points(p_1, p_2, &#8230;, p_n)</t>

<t>Input:</t>

<t><list style='empty'>
  <t>p_x - EC point in G</t>
</list></t>

<t>Output:</t>

<t><list style='empty'>
  <t>h - hash value, integer between 0 and 2^128-1</t>
</list></t>

<t>Steps:</t>

<t><list style="numbers">
  <t>P = ""</t>
  <t>for p in [p_1, p_2, &#8230; p_n]:<vspace />
P = P || ECP2OS(p)</t>
  <t>h' = SHA256(P)</t>
  <t>h = OS2IP(first 16 octets of h')</t>
  <t>Output h</t>
</list></t>

</section>
<section anchor="ec-vrf-decode-proof" title="EC-VRF Decode Proof">

<t>ECVRF_decode_proof(pi)</t>

<t>Input:</t>

<t><list style='empty'>
  <t>pi - VRF proof, octet string (81 octets)</t>
</list></t>

<t>Output:</t>

<t><list style='empty'>
  <t>gamma - EC point</t>
</list></t>

<t><list style='empty'>
  <t>c - integer between 0 and 2^128-1</t>
</list></t>

<t><list style='empty'>
  <t>s - integer between 0 and 2^256-1</t>
</list></t>

<t>Steps:</t>

<t><list style="numbers">
  <t>let gamma', c', s' be pi split after 33-rd and 49-th octet</t>
  <t>gamma = OS2ECP(gamma')</t>
  <t>c = OS2IP(c')</t>
  <t>s = OS2IP(s')</t>
  <t>Output gamma, c, and s</t>
</list></t>

</section>
</section>
<section anchor="ec-vrf-proving" title="EC-VRF Proving">

<t>ECVRF_PROVE(g^x, x, alpha)</t>

<t>Input:</t>

<t><list style='empty'>
  <t>g^x - EC public key</t>
</list></t>

<t><list style='empty'>
  <t>x - EC private key</t>
</list></t>

<t><list style='empty'>
  <t>alpha - message to be signed, octet string</t>
</list></t>

<t>Output:</t>

<t><list style='empty'>
  <t>pi - VRF proof, octet string (81 octets)</t>
</list></t>

<t><list style='empty'>
  <t>beta - VRF hash, octet string (32 octets)</t>
</list></t>

<t>Steps:</t>

<t><list style="numbers">
  <t>h = ECVRF_hash_to_curve(alpha)</t>
  <t>gamma = h^x</t>
  <t>choose a nonce k from [0, q-1]</t>
  <t>c = ECVRF_hash_points(g, h, g^x, h^x, g^k, h^k)</t>
  <t>s = k - c*q mod q</t>
  <t>pi = ECP2OS(gamma) || I2OSP(c, 16) || I2OSP(s, 32)</t>
  <t>beta = h2(gamma)</t>
  <t>Output pi and beta</t>
</list></t>

</section>
<section anchor="ec-vrf-proof-to-hash" title="EC-VRF Proof To Hash">

<t>ECVRF_PROOF2HASH(gamma)</t>

<t>Input:</t>

<t><list style='empty'>
  <t>gamma - VRF proof, EC point in G with coordinates (x, y)</t>
</list></t>

<t>Output:</t>

<t><list style='empty'>
  <t>beta - VRF hash, octet string (32 octets)</t>
</list></t>

<t>Steps:</t>

<t><list style="numbers">
  <t>beta = I2OSP(x, 32)</t>
  <t>Output beta</t>
</list></t>

<t>Note: Because of the format of the compressed form of an elliptic
curve, the hash can be retrieved from an encoded gamma simply by
omitting the first octet of the gamma.</t>

</section>
<section anchor="ec-vrf-verifying" title="EC-VRF Verifying">

<t>ECVRF_VERIFY(g^x, pi, alpha)</t>

<t>Input:</t>

<t><list style='empty'>
  <t>g^x - EC public key</t>
</list></t>

<t><list style='empty'>
  <t>pi - VRF proof, octet string</t>
</list></t>

<t><list style='empty'>
  <t>alpha - message to verify, octet string</t>
</list></t>

<t>Output:</t>

<t><list style='empty'>
  <t>"valid signature" or "invalid signature"</t>
</list></t>

<t><list style='empty'>
  <t>beta - VRF hash, octet string (32 octets)</t>
</list></t>

<t>Steps:</t>

<t><list style="numbers">
  <t>gamma, c, s = ECVRF_decode_proof(pi)</t>
  <t>u = (g^x)^c * g^s</t>
  <t>h = ECVRF_hash_to_curve(alpha)</t>
  <t>v = gamma^c * h^s</t>
  <t>c' = ECVRF_hash_points(g, h, g^x, gamma, u, v)</t>
  <t>beta = ECVRF_PROOF2HASH(gamma)</t>
  <t>If c and c' are the same, output "valid signature";
  else output "invalid signature". Output beta.</t>
</list></t>

<t>
  <cref anchor="CREF1" source="Jan">TODO: check validity of gamma before hashing</cref></t>

</section>
</section>
<section anchor="change-log" title="Change Log">

<t>Note to RFC Editor: if this document does not obsolete an existing
RFC, please remove this appendix before publication as an RFC.</t>

<t><list style='empty'>
  <t>pre 00 - initial version of the document submitted to mailing list only</t>
</list></t>

<t><list style='empty'>
  <t>00 - fix NSEC5KEY rollover mechanism, clarify NSEC5PROOF RDATA,
clarify inputs and outputs for NSEC5 proof and NSEC5 hash
computation.</t>
</list></t>

<t><list style='empty'>
  <t>01 - Add Performance Considerations section.</t>
</list></t>

<t><list style='empty'>
  <t>02 - Add elliptic curve based VRF. Add measurement of response sizes
based on empirical data.</t>
</list></t>

<t><list style='empty'>
  <t>03 - Mention precomputed NSEC5PROOF Values in Performance
Considerations section.</t>
</list></t>

<t><list style='empty'>
  <t>04 - Edit Rationale, How NSEC5 Works, and Security Consideration
sections for clarity.  Edit Zone Signing section, adding
precomputation of NSEC5PROOFs.  Remove RSA-based NSEC5
specification.  Rewrite Performance Considerations and
Implementation Status sections.</t>
</list></t>

</section>


  </back>

<!-- ##markdown-source:
H4sIAD3yvlgAA+V9a1cbR7bo9/oVtcgHwxxJRgL8ICs5gwHbzNjAIGzfZHKS
1ZIa1ONWt9LVAhTH97ff/apXqwXO6345mTWJ6O567drvvWtXt9tVdVbn6b4+
HR4f7nX00ekQfuiDRT1NizobJ3U60UdpkSW5Lq/08V1m6rQYpyoZjar0Rtqp
STkukhl0M6mSq7p7M07z5GO3MOl4r7u9qybQzb4ebPefKpXNq31dVwtTD7a3
n28PVFKlyb4+Keq0KtJa3V5Dp2l9W1Yf9Qf4V1Zc61dVuZirj7f+s+4RDqRg
fvva1BOlxuUEvtzXC9NNzDjL1DzbV1p3dV2O6b9mOavSK8O/y6p2f4zL2TwZ
1/S7uhqnE1Mv89S+mgEY+LusyLMiVSoB2JQVdQ7/1/Dc7Ot/9PR7WjQ9Ylj8
IynCh2UF0zv8vnd6ckh/G5hCCtN/m+WpKW/Mx0T3+ztPHu/R23FWL/f1eZVM
E/67nECX/Z1tvb0tDxZFXS2xS/o7nSVZvq//kxQ9Bv/fi2zcG/8Sz3PY06/K
fDJKq+tgpsNpUpVF/Iam+6I0Nbx4V2Q3aWVgStHM+/2+PlzMZgB4/GpYd/Tb
w2F/J1wB90APqvQ6KwtY8EGwokfbg0F/71G8pHfDg3BN1zSvv49Nb7TopZNF
vKSjnj5P5smknJeLvDTBso6yWVZXWWlWP6DV+WUhbr9NqmWeFJNoic8Ggx1o
nRW1flElxXiqj6pgdYdlnqfXKXxRfYzXeBSucbD9dHf7/jVOsjnN8e+L2WR1
jbBtrxc/L9JozxYzALp/TEsaJoBMV2U1TqNlDPb2tvWHxJi00pdpFS7hNdDT
pLFD7w/i2fef9u+fvZniNP5+jX/1gGpWduiwp98ktxWxjmCDkptsog/jV7SO
g48J9AVzHU+LMi+vs9TEqAfreVGVyeQ2Wf4GbNse9HcH3f723u69y6kBin9P
aAq0GlWU1SypAVuQ7IFJ9Ld3dve1+71nfw/6/ef+984T//tZ3/3e2X5mf+9u
7+wEv3eD367P3Se77vu9fn/X/95z3zwZ+LZPnmy750+f+rbPtp9t0++XJ+fD
bv/Zk+7OPi1aJMBRdp3BwvUwuy6SelGlQNBADkk10ZtHw+EWfeuZn9uqUwBM
WUDDk8JAV4s61YCArrHR8F+/kbxbViBsP+9uP+GNTSvY46y4Km3nOE3ggO9e
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
Y9Ge4JEjsUPJCBLYGyTyxMo1GkkUR1xijTldx4dHw4NgRuRYczEh8xBNHR+R
1/d3klVDlSFfaTBtdrpFhIt6+qIWGmx3OUtAzWN7BDvxGaJPzMMRsPzP3psd
tzd47Ot37o2s777d+coDlR7aJKsLCj4F1onMl3o2zp4K+Li2znNJAWIxTEly
ToVqeGMoBkVigbVL9l374Y4OLg/0B5QlL2mFPB1+HMkCD0z0YYJgxAREmAVg
zf+FfyT1u/FPv+V/g5b/7egdpbfp5Q7QzJ5+op/qZ/r5b3mm/qv7B/+nfoUp
Oz2E4vUr/4hz9J+wCav/PP4T5kDAVH4WGenfQEvovSPuZXNGrVnWoGjvwf0n
G6IJqCMVuXy7rMEDq84n5JWlqKgnJ9h/kHF8Aiv06kairxWDzjnaycIyxKR5
+EKIqLxqoBV1wZjleRG29mDgOVM4ULoUuVJ4aTIBMYRhLJEqotcEwGjtBMiV
3fYsrkglpOQiM8cAX2ZUItoVci3hL9KiTu/qmMLvIW8kH5/w/eBRBXFsk56s
yshy7emzIug0SMhEf8g8S8XwtayADPEOBVspCy60jklf8/om8sAVC5pzlngC
cV6eTUSzwhnXwvNk6FlDYgFLzemrAkCmggGllfRHqBBg2G9gUP8ruJP7B9H5
MrkOH/H7l3lybezfpwBs/SYtrkHc6l//7Dm4f2iY17yRZ7S1dL7nL+KQj1vn
gP9cLudAmlmt3yZzs/arP49LIybajWDeEnlCyEsEryhJZpXrsfPESe7Y0dNZ
pxPjmNxhYPGo2BPgmap33rEyY/lpR6IB3k+prJchmrWxFrNVZ3Rkmzd0q8BS
FebL2Oj4bizJuLNZmhSixYMBnwF7XAArHGWU8EbWt2vuh7JpBj9d4QBuuBDf
/aCBiIgEKdstVo6qnNvZfWrHaelVzFoTjrv2Y1o3xd+ZnY7A0sK8Ju5Bn9TK
oY1j2aRty1SQZTYdlx5XnGM6Qv71ct9KOUJAaONTlQAZowhKwKWB8Y6nscKB
XqVLrxnLXGkMTFnFpA9AIexXPGGhCh2sYIewPUx6UPFBDycLGJle0io+fRXu
fzO1AB3UgEHSjr4h00UQyEmFBrNeZQwRw/v1w69nLUxUmMG3+kx39dm87p6h
HwXGxGcf4NmHLJ+MMeTJD/HgCsGZpKqfnDv8hiR3tSBnLEbVUCRTiA1snF/S
qhScC0fiA12Wyk06S1C1MBw9s7lJ2IgAQNEOytWIY4QuIYFBT5Mi7gSW/B3m
puggbx70ojALnyAtM4vWS0Q9Fv6GwSgM8/Fr61XmsIBNjG9iYYj4eXqT5noz
66U9cghUKSO667IoJ6nKZrN0ksGQ+ZLwKmU3leOR7r3GJHk0t5wiZA8fBINu
WafQooI5Oj7eWKScecIgLDGTWXKXzRaz4KwZhj9cLpsodw+f7LPxduPmJosK
MoSaxS0+f1bWxn3aG5Dl3NCnfre6fo+uHgvC36OpN4TFb27fyv352Kjr6QsZ
dnPskH+rMSj/XYxKFxg4vGFrgLKTMM0DBRdaCjbh/9bbEkhy8kpJvpHMJ2be
bnTndF3lpvE3Kkq2XuGojaNzgb0iEYK1Rgu/l4PWAk6bLDfOFxPPyylcf5Xl
4kRVq83XhYk62lomZFL4cKxqGCdBPNaJPYvZspCmuWAFBQ30U4VnED+vNSFc
VCv7X25EwD8BVVBxkT9def4rFGe7geu0Z6Way2rTk9bqak53WgkKrRrS8oSC
Zm04+rtZcNjJX8OHW2D05ztMSPOEdT1YRtGflNtzWh8BndU+JFURdmYxm8FO
/oLulfCoXW3HelDc4sF3m5WBrRrh5hw+sxlXzPw4T+hlQofjJQNhn1rN8Bga
KADJDAuosXXjz4uxKoTe6NYzELOFqa2viJNzJOKKvw2eYQyC42EY1+UzSG67
i8NyLs/BmlO2AEyeNTt3kCmyfbhCWRg0pthUkBFARy8mLAqcdJJ5cOZGaDVg
D86cgIHG9pQeQd0sJCHGJsHYo8h1eZ2SwkwwljAUbghqUwh/WOEO1ikhpoD9
TtPxR1lWYFjyY6uLCg+hpBV7EgpLh4VnDtwJCfjen2u4bIc2JQGwUp1KHJjT
4vAIlisUYGcxh82EeZ/YFBlE5iTj4x8IojgfqbOGx9hkHrYCSDjH+kKLVZnE
6auYhQroGKUByURof9omsmqoBh5CRmFMWGo7Bz4C1pymhbcncNBHJuA8ZJ60
a2nCUHGQ46qCnb6w+ZJKNSgRLbDTkn2osQ1LqdbsCcUduP8zTLJzJkZ6N0+o
rEbY+tJ96w6OX+F2E0HgsZg8vbbe8we/PqJXgD9ZxZwNqx3cQ7k0fU+kSL3j
HEwV2ABgavirIhp1KwvyOVZakrNBGjmP8Dg8SSstVygNOztsjptFlQl6rd9Y
4zU2qcZ4RJ0U9pYmDm5UNuJ06DTu4dmBHTDUqb+kFwZ7S2NBkCZgyCFVZWix
y+m/fLn2Sz4/FAICcbjUR1gUI0Bg1gAos1KcYon7zLEb8skN9b8uvzsHFMqu
rjCGKtUErFuAAZ/Cu3HN5/NcCykOwFR847ZRisIoJzdpXylElNRTe6ZQlkrP
bDUTk83mZJaOKbFvtFSgyc3l7FUWmY8XFgpuMYSVosQRUWAKe1mnXqgFSwoY
6lXLkgisq3DtuC6gY8wqOCawtLKLg+JL2QWP/IUfH9Kzhz/+jXTue1hH4K1k
6hlQC322cCeiD17vOuJa1+pwHVU9uFf37xN7syxbtSTWmrhmTcXfyUPnXNsz
fZiZ3ssSV7th2K/wxdUPJd9zE1co5LIV0ct9jS13jfyFnHuHPMgx3T9LijpB
KeOLRvjH8PyPSaU/m3VHcGth4n8IfiFb4Tda+KCD7GofbWzmNzf+S3bO15fy
7l5x4LrxktoSm7Jou/X/S2MZtsyvTSS1f/lbOOTD7e/jlX8FFjfswSHv5WEU
FCBkpzJmQzlp/ukr7OAnyZ8FI/x7OizEoUYGN4UrDHRg5AQ7xSV8gbnm6drA
X913WVn2lGlQKWc14oBSAj2plHKpYnMd68ZlHNmw8ROeU8aeEMxvp6S3k9j7
r+P0hDC+kCejNNdBgAHsvbYQQ0tXnXWZs5w6TjMkLFhVhZGaZe8CH3lPn6FB
fJtJrjx0Ql/btXoFmvPm+DzVPL3jL8SF0Tg9hEOJL44P9diE8yBNKLEADtOC
nGW7gAXaw28+ODldOWLlEICTVqzSOQMrv5TD/ogumKw/mShnkXO/VZqTD8d6
B8RysqdnpOJAyayP1EV0LCh37I1H6ZH3ZghaxLjmQ/su3chmm4PW+yotqHwe
e6cZDHz+sZFnbcTJMpk0gOr9In4PAiAH/YYnWnZ63hm1KLKfF+sOtwX+d3f0
B88WInJiLg+fdkryDkLSOwMwgAuYH2jXXOXJo6zhM7uBu9DqW0BRB9+Ro+GO
HWEwX3QPH7BjZI2PQjwLrc4D8a630aBNIxbHI0darMEncZSOtJ9XfATAhm04
3s9kG+6BHMfAJi8QBRhTYt8pu1JCh3REvTKi9Nqygfj2sAeqWZpUq8Qbg55P
ePMGmDSye2QcpG17Wngl7skLZIdBe9SzCd/InWNHjNhOT0dmmHTglQS2/eDf
hGsRpgUh2pZwr/TkZF+dfEzFUrVp9VV6VYqT08ZXfeQJZrsl4D3ye7ca/SOW
wDEEd+TPmQZUzoYn0kyghF4sH743TjjKk+KjTOTYTySO5cmnYckO4rJh2sX9
+A8j7ELv6EojUcoJ7MGZOmQuDQ8btNkL2IfPKjIhtNYuzFba0Ws8jqRyNS36
5hQEV5GBUKkJy7uFA+RYaWelD8pUbB8V5RtWpW1v5FKZsJJLmrhAr+XCPpEd
YRZLW9JOxjAhY9O9iUcMzw74iOQB1hWKfNha6o7EXVxevhF8k26wBxsIwJdM
+uTfoDqM7IRecFZBwA1YWZtIoKJxNFTURkV15Zhq8HXCJ+nZZRQU+KFDkfYM
dcjC+aS3HVX4eZjQGZWKw1KCKLSusutF5ROBv8JA1tiV87dm6Lk1Q4+tGXpO
FgIoj74KkwRib0vY1C4G1TVyraTKSqw4irFec8tKvK8gJTWhfExIuTJHrZEU
ysogji3HR2/LRkCDa4Lbx5zkdk5HaqNYEyiipKfgMVpLftyHwyyFvbUcAVzr
SHCniCQXCDtXLR00LZzwfDTPoXnQUrU185qhPSgVlNYStthaJ4p2o/0g57K3
WqeU59R++HO9U8UioC/SRTtDpyFImlvUJNq0p/ew/EmAf42tRRk1TXKh0Wbd
ZxWX6AjOewWZOi1rD+qZCQgaw7YtpX3+eMzWhm/b2HWzMIfLUGjd8DblqaF/
SeVfiVcJYw0nupq2YbHGsbnEOpvtF7ewijacItghDlktVwr+roxhXJWdJv8h
ChFmi6KfscGkeHiIErycyeXzTwKTlce2ceKoagXVV0NblM+DdoHzAD5y/SJf
7ONalH/yarceVedjau6EeUdnta+VKKwdF+yLm7LQ5lCnHykIcwtXQnXdNHAL
HTBxOQ6ObzPb92en15Wuxc1U1vQLdYjIKd9hA30l29byQlItVBpXDljpovWg
OZuYtLoizBGyWMaBZLHOeyuJShzkpORgh+OKlJoyCEEy6jsajgqYrK4FxaBI
f7yGC+R0S77FRSsdMEuTpsrLf2sMt1r7vCrO4Jgny7xMJpYSgxEpsaFuFl9J
xWyes9e7kALBUX7T54aG0VhKwBysDu+VdKnExF47Ffmq3PHy26br0yHxFi+N
vXCgNKkkv02WsUOtdYdsLIPH4Cp+btoY2sYS8VJ+F9HYu8LZER4awnIqlRfS
9Ctqe/kIh46DmcdheLbEklAJCSiI6Dq9S8jYKoso0EBV8iyLTyfW2xY4xk7P
LsPzisjK8jzNPQfgCo47XG/f1gx++NaQ4NoI1ixdoXDVchmIK3/YYUSGRd/S
5QJA9ynppXiL1zibJ7m/I+K65DFtuu+Q65TmVA5DJh0r7yY2VoTPhwlFajWd
vWEGWp8PiwqsMYkvURG7LcLknUsmD8KoUQq6eYa+3oQAbUs1IbQn5V3jjKeK
siXD7NlnDX9k8/gbCm9CCwt7pS6Y+8+8hPVuAY2h0swLFqvd3obL7/kEShyj
smP4/aUyLa5E7AboQF0652amka+WkuzsFNdUn8O782wRvNUhSV6gLsNZMC3p
sDp2ugblkw5oXU3HCHku4myhhv8xsHcw22ie3vlKRGU+iRCFc9OcU3gFlOFF
CFTCz6oi+J2cqfV90JaJbTifowkSOJGSupxRQSZXC/VrMcg9XxDSDpg+ETVi
PikqVIOcbVmcABXnzG2lHGHVhJJ1Rob/jl914IClCc+ocmrLwZ/1MMSurDkK
hiCwVJuIwx7ZPk1oEEk6nAiqNDVdoYK8hJg43eXBPtrkmpyj5ar9YFWkDl68
xfTmRKSyKZN2Q93cv2CiA5rozl85UUng5ypkkWAnjiwJT9i7Ezsp8JuFCatT
O52XmAbfZIPppBxpMSsn961HjFWvkJ+XQcXoVs/zME2BnuF3niYfP3/m2Jtl
241zHviu1XsterPR74hO3hVUhFC+CSu08FcsZSon6rjGN+aXhu28V72s7Cdq
USQ3CfAvNAFXayv5asjsFoQtQhc+HY/p6SEqzlShTnnLoEr/w1drkNGBOlUm
1wvaklLybegOUBeHZ0fH3wywVAYRMZb9W1TpFvcCwJ/kvvKmLJilJCVsLeg2
RePmwyA8WoLgA1J9R24vgNaBt/lcdRLRB8BSBA0Pz9ZMpBU7y4wOCrJKRj3X
PjSRH9tSgOfPdPsQaF082ejGi9pW1bNhMFvbysXlGuIhCvR91pSzulTEm1yl
FKoBue6wQSBK94KCjlRXp2T4MvVmxuBpQ5hsVS7EqJ2mfgdQz1lxMxsldgLy
aXFkoR5HPrSgFrBXg4VXM7JwmrCFtw/INAHdVEzQ+rABKGfUSE1M3gaj4Js0
Z17hzRBbExppMFIMRJYVQVXJVPHEyP3oaknncXky2v2o1J+cLfNbqog+XdgT
aK0MC39bQEs1YJZxeMiIsrQvpDbjSkz40nlNY87SrJpst/95Q4tyFQZ2sHC5
Vx8bAV3sz+uOYq244kpkEMjFAlj9HNbm2IgzmJtuKe/+RcMnz5VLLB5j9XTO
Zg7Ptqyz0AlAPqWgJWr+3icXNzL8fNIdh2KvC6/m4vy4SFFwHEoO47KbsMab
GEl2IhN+8FBsMBhwG66v6RcFEB6V14vApRPkNOOJDOWnRSgGOjn7VRNJPXTR
XpDgTfdE0uqcqFdBYOvMwoYEYft7XRDnFpVndOstpR+S4KVgixI/VODqitwd
zfk0YgOj1J0vmTSK1CVttldnRc+NaxiimPRB7MzjeHDZYFBEBoRcaFn5A9gd
f/REnpAAjmNJPswcFb8MyrIl4pP0R0eCQLjP8Wyq7o1KteERmJ5UsrIh1NWz
O86RQqnhnN/uSjpGR358uedWBVdqRAxctv9qVWh/0Vhz/MbhFgoqIYUFZS5X
yu64oCuC2l15F25CeKYhWE4HNwQUMqz87K89JOQgIERlf3UETtL9D1eKXvtb
N9qr/1HuE2Y32XxgvUrRHh1az2Ew1YTuYKk3KDLfKcMNIebiIJ7P0iJHdnnG
BTOjffOlJ8siIkV2yYRPSD8zIRqSu9Wyc+ajHFs3pQ8cBhyleQI3gp34Jpy0
7EQcUTlrA1ko0w+xzoa7zcaaHSzbcvFXYjNZ4S+bAITJhM8H57fXQhnnzY42
FeA9BpNMLMBctOmBOIGyqCEK4prPXHXJVWkHYqFKeKfcjUzDxYiV9vu1B8fx
re7wrPfl2oNcOGEXTMWh11sxB/cJYsteiUVFFo0vbi31MObu6nqugctQyqSQ
GKBEVE6bDA/bYVCgkspfjzxQUBMU9ALbERVzGKBFzbiskkKOzAZOqB/+fXl2
dLYvJRpcwdTgDJofj3Kmez/8D2WK+d4sVJnT4M/HHMCIP3Nv92yL1s/gnffN
JMEuUAy5aYw+ZBonQe03LsUWWZGKheg7I7qHvSgvOK9WzmtmA7OkaS/07DmM
pl0qgT0zTdjFyD4JJxFomzto3aR0ZkrZOJX12oQ2iSv/7B0E4eXYkskCuAxW
v1zkLRxiTPzHOBWC8c59hmw0LpqAPVGcSoVxKkZKQm921CKqdtjyBRyEFdTW
SSdFmogPcAEoLgmRMj8Z7O1JSRWpoZKD8lKjq7MU12twc4kY94rvrWuG5QT0
QE94WM9WUfClWeIC3Vzv1V0S6D7zN1m6hOBATjl/xIJvsMOCHE20DBlRVOKf
XP9Y7dDXF0HoKHfxFnknbN6RmCxBBtveILxiJExpU42UNujrg+wFezCb9Vea
yaXKDmPLZPpkOJtIELBwW14/TpJTUheIDSATgpX1JCanqIoPl/GJtkqFg9jg
TFiy1qtbFpZBRVJ2+6vB9sAevN5EFOvqvZ0t4oYneMvxzJ2SHsJ/F5hbkkXP
u4aefw7u5oDNwOLa9rMg8vRPZC50JU+LY1BtWqdev/ekt7vlMOpdMUJ3BcYm
FpUJ4qxBg73ec6khouL54S1wE3uzFF/gENJ0no0qdBbaosZjsOa/ZgupcU8T
Ult2k1pNAC8iWoYq8Bl0MByC1tbvbfcG/5HiT8pmTAF9kl+6MTvZ2OaczWI+
t7loVwuYDZ30qhZ4RbZP0wnusJBcwNP/c3T29uDkFH6doQbfcdmGHeUPU8gr
ui10Ne10K8CbRtXRIH3vkhTYiSTIAxhTyRWYAYyJ9VE6lzjEVkukegbBt22P
0ghjbHYcz4ILgKpGgdOorCjS2KQq511SxnygwaIeLkM1L+Vafyuym4soZ9Bq
lv3CZUBIFn/6FORYfZZ701aKiAdaurUCUBxFN+MRsZ2zp4gulG3zA82D987K
drSWIiO0aWzNy8H8ZfXrDh0cB4HLA76WDQ8gpMnn4HK2qhwt+Nq+lasx8eiu
vclgwgISaUpueKOkjsL+ySp3oGs073sObcIPwqzr4G5V97oj3jjbrfiz191h
ROUsvuA+DkYKCoOjgxeYJsoXvsq5thFDW7KTbcSycXSbco3llkaLw605X4yc
sAgeOViuXhlGbnOU1SpZrZvXiumKJLpAFeKGsvxi8AMg8py8s9gUA95VunqV
hKzMXmiP43GuDW21svuLwVG8jacy6YYOTpsHl1eKj8AEctUWAla8BBaJrCOF
zpYoL3PNLXoqqA/CORTol13Gl+W5+4maV+cdujtZrdSONWV0tnz6ygZ9lKPd
ezIiCSZY+7UdsTvKXlkcvm5eGozVqKIP4Fn0XoW+r7Xq9NpLLxv5CXLNsYoe
h4Gn++8oYYLVB4ZSrjoqCe669cXDm5NzXCD4GIms9XZ3usQHhDcCOLH3nxL2
rLk+BInEWQodX2QiuNiyG13xK1dScoESusAQxLwpi3U30NC99cQqRqTmSf6v
5CzJnYM2peJ2ipXNqJPxUm/a+zCb3HTLn1TwV9kDCxXP/YMXSd5LAqqFBPgy
LULcRmPLCtYt3zpxvYvaucvuReomIrtAsrfSkOjEOoulliXF4nPodaXCyuIH
o2IoacFXHJZke5Fl6uQRcTXD3yXG33Q7jrDN0wDCcIbqWFKAIn4sdz3X4eCK
BGSeky+Vb4HEKBIGsUSx92RYlyUWvqpqf7U4ZRDYOcwoEu+HFC4MW5KVnMOG
QXicvXVfkf2QXaX4Qnn/py20c5egMtOJhMAsu54i1ZEUWBECqikEHFAoX4Wi
m7gCmZRLsQZCwYgdaOYodVRyVadVDCis7IFsc8tRI95esU53YFklt7hJ9T+S
M60SzzSFRhBGssfVsvgG4gg9cRErqCkJZIqJ+WuRYvjKlnfl6K8T8pQ9hpyL
Y1wxH1MNpksMhJbF9ZyZfxBHmSysozir3O7KuWheGNWNOoQtpIgMUgbCAvb0
c8Ona0+AJXLMGLedCmS7yED8nXNHKmvLBufZyBls3VrkfZACUPYYBNnAYXVr
i5I8LC6Kz/u2JLXj7SHGQxSrco1swNiwzT+2C5bCXMh80NtSU/3GkT9UGXzI
mhtYHnQLSeMKEZbk1AYDnGBhsyEz+LE/eIa5EYDowTEt5a4KZBOwSinVTLwj
dCvtPCg/1XJpunL3DlF1YZllt8IEUCR4vJm84BKXJo1nywKZjlUhWYb5bf5G
nExuByN/Pzukj4Z85gITWBI5aANs24wXhtNoCiJO8WJFIoN9AQenB6uMuO0K
xKZP0Ub+ETjUS5VeY5LNUm+EnrjhEnBlpjcBuFvq3F1ascE53CPfqFFFUW9e
XGxpPBJuNjqodHPxVake532y6BW1tXj9CXp0P2vR4i9fHPmD73xOrOUFG3Th
i3i5zm1II8YLDm5XCnzblBun3Ed4MCnBFJMNwbOmR32DbW+qMJvkQehVcRzF
9UPL3KaFoFdUCt/SUvr2aWzf07tB8C622en1The9RPD6wKUWsTxFjLPXc34x
BpwOvXXqlqhO+ZbMjXA/g72k2zVlG2EPtL1+rUuXuOB6nI8hS1jcN99s9snJ
1WzPy+2EDfkRNNjb4uP8hyg+MEWsXM0t46wlkfOOM1qX4zTN57hPb8siA6yH
3jc/pNkvYNQX+gRUwawGu3Wro4YJegr0+8Sg9N88BDIthUAMvH6TQnssJbL8
Bb7afFGaGsj3XZGRN6xebpE4VgcmudLfZzetgyi8z3FsV+J9l5jYe+1twJ46
KyZV+h89XMB2bR5+3zs9OdRvkpGRQY4WCcizD3hFZW705ntQB6gD+kS5WwhB
Z8fInfDI2NkVaJmkpBnD9eYogiOODYqq4GlO7wWBzeh2u3QvLe5KyyVUn77i
S5JYT2x+4K9ovuArml+6K5oB8fGWZklBZeM1UePlGCPWfGfTK03xb1TEuNga
SVJhx8iYbSGnqJGS0AYpUSTzToaXRICNu3ukHsPqhVVG/ab7qtbeVqXotiqe
o10RpcmFWVDRVJuXDKmHLhmKrhhyM9vt9a2f1iVOWqMFN01yJbwhYRNOgNUd
oaRPu69hCoACICuOXm+pQODak6rxRtkjM7zLZZWMsQBCOUnzHpcEDTLvOe9F
NF6ZEVeibBpNL7M7NP1oYOZEr3S3eQMTYNIWz0Opd6hHekBRk+sf76BRlJSC
j+1Db/bj05/haYhxADWLVtgVvPXoF77jgZ37mgbe2MDJUqpfeHMcvvrh1x9+
hZfhY2QUeB6Cs+rwo/mPH2WOJWi4NjYn0SX6oP/D3+aD8Bvrc6ciLcyEu7Fu
o61+1p5BP8AbD7D18eH54GwY9o1X3DbmayMDjJ/0FbkYUtZ3QkKCLoNAOJBN
Ty6tAqb0qs9jng0HMGwTLjCum8MfHXO3MSaq+cyI9MHiLgOBBBzY8ijDp4Ll
PdkBYMUTZ1Pq+BAe/oSg/akufyJM3JxtgUmAdw/S9s9gIazC8Fl/jjx2mhcJ
KnVGdwxSm6lsVzqx7ki7dKWG/jjCWH+jtylt6BB+ncBGnW+OO3p3i1Jt7vA1
7/7mjFHtcIuSVebY7m57wA/vxnS0HoyYuT2pndiydOEGuAMu5FiXwJyFOaI9
zU8jrF/tcw2BT/vQeJmn32zkaU0q5md6LnMf6//SfWWfvCo59J3OYY9gT570
AA7fCDZszmHqT3uagaSnq3tyjsObaEdoRmZz/lO/o+c/DTq61+vhryLaoPlP
dyF+4/RbN8Nuhb3izwbLt/mMARow3X60P+cw/Y0N2iBKUMe+f/h3NB2czf/8
sK81QgG/P+dNYbqjVcNWTh/5rTznPRTQnJxvcgmB/hMbWQTUnj7aoj1thdZR
SqEkOr5uwTWhZ5yKuDnPYvhkAAB3n2snRorNZ30ZdysCGt+v2A3w9lvY7u5D
wPtWm3s+QuU5hjCgFQ/1qKPH8H/ziJTBDHhanmExAfSJ7Ox0K86R2H3etVcm
0q7wLB2OcU8M8rGD7/gRQ9y4JyYGLzWD8VmnMiE3Oecy8BbMYNC8P94ESdTR
d6j4zqdJBOrfJKOoObyZAfkl15a9sP+4s563fPl2fosbkMjXfCFz/PHOwH8c
bAqiZhtftOsNAD/98Y6hPS3RX5ugLwN014+skvzw7+2O/rnbxzyeXd6SVeq+
7miYGMF0iv+6/vEj/vrIW4SbhuJz/MPffkZFRP9MjAWA8I2lMZrLFpOd46H9
J9ET09E7A+ZABBOY+UAaKvXMYQJ0iyiAnzSwAIgShAblZ3pcOHs5eH0wfO06
ChBByCfYp4hBicrqLjkFcwCWvoxp8PftnqyP130n6x64JfLa0EGzr1+IR9Ud
mQtLuweSQQIBVFkn0miDO1Alr6RKYXapOweGLUTSMEikMOtoqUrQsVwCCfPA
8C5U/r4XbgOZIcuAHN8fX5y8/I7pcZ79BoK8j4bWkCang99Dlxsscp0vaQOd
9xtZ0Xz8+3fW8ynjKGmV8cNWL+A1QmXrx7H+4W8ABMNS6AG6BhK9gU9oGG45
xZZAheNHD5GuzG3R0TdbRKGChmtp5SlpLFy3DLoPr3Ht2OuaV0D6NUhZsJ3d
fc4t4I0QHdDn3z8eXhy/7P8PqjLkC/tm4x9JAXqMe7OvOS+Rk5SpPzG0GGVH
fOQXF057/pU+pNM4+k15bQsDlxq0bjD7MjAo9jng0ZorWI5MCTKPi1RJ6TcF
TfGYX5pQcflZaUNLdOBzkt3ZGTAOS/SNb+Z+eUiOGSBUvb1NkpcdXY0Tf24i
ZjFCspPQZpLRSSasWc8nV9AHht1cwaD3HPbFQ+wJnY4I8zYoTwbVBHlH13ez
R5W3ywROvba7fLGtr3hCC9vuw2ywfN36lA972QJ/P5DvG8YlV7sCVORieDOA
NSCLPQ/t8tHx9gCD9GmLY4HZl1WUR4sHK3mIHRjiLarRZaHX1Cl57+L4wbyx
Ju49M99FRgUIpC8STrcCOnhd2vTUD2X1UU50tWeooOqVjv1pStqFGsNa1GlU
L1M+pOp7iIDf+nXEXiZaDbpdLxgtL4YHXYYN57R+20iVxA9vYdj0vv1CV9i3
axLm7BJ66v8Bi1wCfea0AAA=

-->

</rfc>

